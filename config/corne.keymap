/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <500>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
    &kp TAB         &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
    &mt LCTRL BSPC  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
    &sk LSHFT       &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &sk RSHFT
                    &mt LALT ESC &mo NUM &mt LCTRL SPACE   &mt RCTRL RET &mo SYM &mt RGUI DEL
                        >;
                };

                num_layer {
                        bindings = <
    &kp GRAVE   &none            &kp LC(LEFT) &kp UP   &kp LC(RIGHT)   &kp PG_UP &none     &kp N7 &kp N8 &kp N9 &kp PLUS  &kp KP_MULTIPLY
    &trans      &kp LC(LG(LALT)) &kp LEFT     &kp DOWN &kp RIGHT       &kp PG_DN &kp MINUS &kp N4 &kp N5 &kp N6 &kp MINUS &kp SLASH
    &trans      &none            &none        &none    &kp HOME        &kp END   &kp N0    &kp N1 &kp N2 &kp N3 &kp DOT   &kp EQUAL
                &trans  &trans  &trans  &trans  &mo FUNC  &trans
                        >;
                };

                sym_layer {
                        bindings = <
    &kp GRAVE   &kp EXCL        &kp AT         &kp HASH        &kp DLLR         &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
    &trans      &kp C_AC_REDO   &none          &none           &none            &none       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
    &trans      &kp C_AC_UNDO   &kp C_AC_CUT   &kp C_AC_COPY   &kp C_AC_PASTE   &none       &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                &trans &mo FUNC &trans &trans &trans &trans
                        >;
                };

                func_layer {
                        bindings = <
    &kp F1          &kp F2          &kp F3          &kp F4          &kp F5     &kp F6           &kp F7      &kp F8       &kp F9       &kp F10  &kp F11          &kp F12
    &none           &none           &none           &kp C_PREV      &kp C_NEXT &kp C_PLAY_PAUSE &kp C_MUTE  &kp C_VOL_DN &kp C_VOL_UP &none    &none            &none
    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_PRV      &bt BT_NXT &bt BT_CLR       &reset      &none        &none        &none    &none            &none
                &trans &trans &trans &trans &trans &trans
                        >;
                };
        };
};
